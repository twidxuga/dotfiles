# Twid's environment variables

export PATH=~/Apps/rofi-sound:$PATH
export PATH=~/.local/bin:$PATH

NODENV_DIR=$HOME/.nodenv
NODENV_VER=20.16.0
export PATH=$NODENV_DIR/versions/$NODENV_VER/bin:$PATH
export PATH="/opt/homebrew/opt/mysql@8.0/bin:$PATH"

export GOPATH=~/.go

# mpd host
export MPD_HOST="/tmp/mpd-socket"

# Pyenv location
export PYENV_ROOT=$HOME/.pyenv
if ! type pyenv > /dev/null && [ -f "${PYENV_ROOT}/bin/pyenv" ]
then
    export PATH="${PYENV_ROOT}/bin:${PATH}"
fi

# JWT pub/private keys for dev services
export JWT_PRIVATE_KEY=`cat ~/.ssh/id_rsa`
export JWT_PUBLIC_KEY=`cat ~/.ssh/id_rsa.pub`

# Source local environment 
if [[ -f ~/.env ]]
then
  source ~/.env
fi

# Source HX environment variables (used by HX aliases) 
if [[ -f ~/HX/.env/environment ]]
then
  source ~/HX/.env/environment
fi

# OpenAI API key
if [[ ! -z $OPENAIKEYFILE ]]
then
  export OPENAI_API_KEY=$(cat $OPENAIKEYFILE)
fi

# Tavily API key
if [[ ! -z $TAVILYKEYFILE ]]
then
  export TAVILY_API_KEY=$(cat $TAVILYKEYFILE)
fi

# Base nix configuration
export NIX_CONFG_DIR=$HOME/.config/nix

# HX Mac
eval "$(/opt/homebrew/bin/brew shellenv)"

# export NVM_DIR="$HOME/.nvm"
# [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
# [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
# export NVM_DIR="/Users/ricardo.santos/.nvm"
# [ -s "/Users/ricardo.santos/.nvm/nvm.sh" ] && \. "/Users/ricardo.santos/.nvm/nvm.sh"

alias colima="colima"
eval "$(/opt/homebrew/bin/brew shellenv)"
alias colima="colima"
# The next line updates PATH for the Google Cloud SDK.
if [ -f '/opt/homebrew/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc' ]; then source '/opt/homebrew/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc'; fi
# The next line enables shell command completion for gcloud.
if [ -f '/opt/homebrew/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc' ]; then source '/opt/homebrew/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc'; fi

# required by dockyard tools
source ~/.k8src
export NVM_DIR=$NODENV_DIR

