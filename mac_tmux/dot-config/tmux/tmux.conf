# Set terminal colors
set -g default-terminal "screen-256color"
set -as terminal-features ",xterm-256color:RGB"

# Set vim keys
setw -g mode-keys vi

# Mouse support
setw -g mouse on

# Renumber windows (e.g. when another window is closed)
# set-option -g renumber-windows on

# Start windows and panes at 1, not 0
set -g base-index 1
setw -g pane-base-index 1

# disable escape delay
set -sg escape-time 0 

# if run as "tmux attach", create a session if one does not already exist
#new-session -n $HOST

# Disable statusbar (other status bar options become irrelevant)
set -g status off
# Statusline Colors
set -g status-style bg=terminal,fg=terminal
# Statusline location
set -g status-position bottom
# Current window name bold
set -g window-status-current-style fg=terminal,bold
# Time settings
set -g status-right "%I:%M %p, %d-%b-%y, %a"

# Pane divider colors
set -g pane-border-style fg=blue
set -g pane-active-border-style "bg=default fg=blue"

# Increase left length
set -g status-left-length 20

# Ensure tmux always uses the full size of the window for a pane
set -g window-size latest
setw -g aggressive-resize on

# Wezterm variable passthrough required by wezterm
set -g allow-passthrough on

# remap prefix from 'C-b' to 'C-g'
unbind C-b
set-option -g prefix C-g
bind-key C-g send-prefix

# remap window list
unbind C-g
bind-key C-g choose-window
unbind C-t
bind-key C-t choose-window

# Avoid pressing extra keys
unbind C-c
bind-key c-c new-window
unbind C-b
bind-key c-b new-window
unbind C-x
bind-key C-x kill-pane
unbind-key -n M-m
bind-key -n M-m resize-pane -Z
bind-key -n Âµ resize-pane -Z
unbind C-d
bind-key C-d detach

# Bind reset
unbind C-l
bind-key C-l send-keys C-l

# remap copy-mode mode
unbind c-space
bind-key c-space copy-mode
bind-key -n c-space copy-mode
unbind-key -T copy-mode-vi v
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi C-v send -X rectangle-toggle
# bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel
bind -T copy-mode-vi y send-keys -X copy-pipe
# bind -T copy-mode-vi y send-keys -X copy-pipe-no-clear
# bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy" # mac
# bind P paste-buffer # only pastes from the tmux buffer, not clipboard
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe
# bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-no-clear
# bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy" # mac

# Enable tmux.nvim navigation - without cycles
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?\.?(view|n?vim?x?)(-wrapped)?(diff)?$'"
#
# bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' { if -F '#{pane_at_left}' '' 'select-pane -L' }
# bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
# bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' { if -F '#{pane_at_top}' '' 'select-pane -U' }
# bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' { if -F '#{pane_at_right}' '' 'select-pane -R' }
#
# bind-key -T copy-mode-vi 'C-h' if -F '#{pane_at_left}' '' 'select-pane -L'
# bind-key -T copy-mode-vi 'C-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
# bind-key -T copy-mode-vi 'C-k' if -F '#{pane_at_top}' '' 'select-pane -U'
# bind-key -T copy-mode-vi 'C-l' if -F '#{pane_at_right}' '' 'select-pane -R'

# Enable tmux.nvim navigation - with cycles
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?\.?(view|n?vim?x?)(-wrapped)?(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R

# Enable tmux.nvim resize
bind -n 'C-M-h' if-shell "$is_vim" 'send-keys C-M-h' 'resize-pane -L 1'
bind -n 'C-M-j' if-shell "$is_vim" 'send-keys C-M-j' 'resize-pane -D 1'
bind -n 'C-M-k' if-shell "$is_vim" 'send-keys C-M-k' 'resize-pane -U 1'
bind -n 'C-M-l' if-shell "$is_vim" 'send-keys C-M-l' 'resize-pane -R 1'

bind-key -T copy-mode-vi C-M-h resize-pane -L 1
bind-key -T copy-mode-vi C-M-j resize-pane -D 1
bind-key -T copy-mode-vi C-M-k resize-pane -U 1
bind-key -T copy-mode-vi C-M-l resize-pane -R 1

############ Tmux Plugin Manager ############

# Requires cloning of https://github.com/tmux-plugins/tpm 
# to the ~/.config/tmux/plugins/ folder

#prefix + I - Installs plugins
#prefix + U - Updates plugins
#prefix + alt + u - Uninstalls plugins not on the plugins list

# # List of plugins
# set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'omerxx/tmux-sessionx'

# Plugin configuration

# # Tmux session X
# # requires tpm, fzf, fzf-tmux, bat
# set -g @sessionx-bind 'C-T'
# set -g @sessionx-tmuxinator-mode 'on'
# set -g @sessionx-bind-tmuxinator-list 'Ctrl-/'
# set -g @sessionx-zoxide-mode 'on'
# set -g @sessionx-window-mode 'on' # include windows
# set -g @sessionx-bind-select-up 'Ctrl-p'
# set -g @sessionx-bind-select-down 'Ctrl-n'
# # set -g @sessionx-layout 'reverse'
# set -g @sessionx-filter-current 'false'

# # Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
# run '~/.config/tmux/plugins/tpm/tpm'
